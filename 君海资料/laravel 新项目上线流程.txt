laravel项目上线需要注意的步骤:
1.修改根目录下的.env文件中ADD_DEBUG为false,这将关闭错误提示.并将该文件内,其他的配置项修改为正式环境的数据(mysql,mc等)


2.在本地开发环境中先执行清理缓存的操作:
php artisan config:clear
php artisan route:clear
php artisan clear-compiled
php artisan view:clear


3.更改线上服务器的nginx配置:
server {
        listen       80;
        server_name  payments.aidalan.com;

        access_log  /usr/local/var/log/nginx/payments.aidalan.access.log  main;

        root       /Users/zhengzijian/junhai/jh_lumen/public;
        #root       /Users/zhengzijian/junhai/jh_lumen_test_75/public;
        index      index.php index.html index.htm;

        location / {
            try_files $uri $uri/ /index.php?$query_string;
        }

        location ~ \.php$ {
            fastcgi_pass   127.0.0.1:9000;
            fastcgi_index  index.php;
            fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
            include        fastcgi_params;
            #fastcgi_split_path_info ^(.+\.php)(/.+)$;
        }

重点是:
        location / {
            try_files $uri $uri/ /index.php?$query_string;
        }


4.部署到服务器上以后,在服务器上执行命令,以重新生成缓存:
php artisan config:cache
php artisan route:cache
php artisan optimize


5.告知肖大,不要从svn中上传的文件,防止每天更新代码的时候将svn上一些本地的文件同步到线上:
./bootstrap/cache //项目缓存目录,如果被同步将导致线上项目不可用.
./config          //配置文件,往往是本地的配置等信息
./database/migrations //数据库迁移文件
./database/seeds      //数据库填充文件,跟迁移文件一样,在本地开发环境的时候才需要.
./storage             //用于项目需要保存文件的时候采用的文件夹.门面Storage默认保存在该目录下.
.env                  //环境配置文件
.env.example          //example文件
composer.json         //json
composer.lock         //json.lock 锁文件
gulpfile.js
package.json
phpspec.yml
phpunit.xml
server.php
以上文件应该在每日11,14,17点更新线上代码的时候被排除.


6.如果项目需要进行curl访问一些接口,记得检查服务器的出口ip,检查服务器是否拥有对外网的ip通讯的权限.并检查curl连接(项目需要的)那些接口是否成功.
(曾经因为服务器对第三方平台进行curl请求来发送验证码给用户的操作,无论如何都无法成功,并且debug的时候发现服务器将curl方法的url参数当做是一次对本机的请求来执行,然后报无法找到路径的错误(因为必然不可能在路由文件中定义第三方平台的query_string到控制器方法的啊!) ,结果发现是虚拟网卡将curl要访问的url重定向回本机导致,好像是因为这个url被hosts文件重定向到本机的原因...所以curl测试接口是否可以接通就很重要.)


//7.修改session的使用:file改为memcached


8.使用memcached来代替session的文件保存,操作流程:
memcache配置:
    1.在.env文件中将SESSION_DRIVER=file修改为memcached
    2.在config/cache.php文件中配置memcached的配置信息即可
memcache和memcached的区别:其实可以理解成2个扩展,历史原因也不想多说了，就是尽量使用memcached就好了，不过也会出现一些很奇怪的Bug，比如使用memcached扩展的适合设置的session（session存放到memcached中，使用的是memcached扩展存放的就会发现不会过期）。

9.如果开了负载均衡,注意其他机器上的代码是否正确,再重新走一遍上面的流程.
同时注意一个要点,负载均衡会导致请求在不同机器上,如果有什么文件需要共享
(比如用户上传头像,用户上传照片后需要显示给用户,那么请求和保存如果不是同一台机器处理,那么就会显示错误),则需要肖大做nfs服务器.session的话需要用memcached代替.


遇到的其他问题:
我之前一直都奇怪,为什么csrf_token有时候会验证失败,有时候无限次在同一个页面提交,认证都没问题,今天看了源码,发现原来如果是:
    protected function isReading($request)
    {
        return in_array($request->method(), ['HEAD', 'GET', 'OPTIONS']);
    }
这意味着如果http请求头使用head,get,options方法访问,是不进行csrf控制的.所以就不奇怪了,如果是get提交,那么无限次提交都不会被验证csrf,如果是post就会验证了.